В методах createLeaf и fork в make_shared вместо параметров передаются временные объекты, потому что конструкторы класса TNode private и make_shared не может их вызвать сам.

Добавлены TNodeWeakPtr и TNodeConstWeakPtr, тип родителя изменён на TNodeWeakPtr (соответственно изменены методы getParent и setParent), так как в противном случае получается перекрёстное владение и при удалении происходит double free.
Добавлен setParentNullptr просто для удобства. Изменены кострукторы классов, чтобы корректно инициализировать weak_ptr.

Чтобы избежать утечек памяти и корректно менять левый и правый узлы, класс TNode наследован от enable_shared_from_this. Иначе, при замене левого или правого узла создаётся новый shared_ptr на родителя, этот shared_ptr не знает о внешнем shared_ptr, и он удалён к концу вызова replaceLeft или replaceRight. Тогда weak_ptr на родителя у нового левого или правого узла остаётся без shared_ptrов и удаляется. Поэтому в replaceLeft и replaceRigth временный объект создаётся через shared_from_this и теперь weak_ptr знает обо всех shared_ptr на родителя.

В методе fork параметры изменены с TNode* на TNodePtr, чтобы при создании нового объекта не создавались новые shared_ptr, указывающие а left и rigth, которые не знают ничего о старых shared_ptr на left и right и не происходило double free соответственно при удалении этих shared_ptr.

Функция printNode добавлена чисто для отладки.



